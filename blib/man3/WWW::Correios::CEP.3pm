.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::Correios::CEP 3pm"
.TH WWW::Correios::CEP 3pm "2011-02-08" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Correios::CEP \- Perl extension for extract address from CEP (zip code) number
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use WWW::Correios::CEP;
\&
\&        my $cepper = new WWW::Correios::CEP();
\&
\&        my $address = $cepper\->find( $cep );
\&        # returns hashref like { street => \*(Aq\*(Aq, neighborhood => \*(Aq\*(Aq, location => \*(Aq\*(Aq, uf => \*(AqSP\*(Aq, cep => \*(Aq\*(Aq, status => \*(Aq\*(Aq }
.Ve
.PP
note: if you call \*(L"find\*(R" before \*(L"test\*(R" and require_tests is true, tests will be called
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the documentation for WWW::Correios::CEP
.SH "METHODS"
.IX Header "METHODS"
List of methods
.SS "new WWW::Correios::CEP( { ... } );"
.IX Subsection "new WWW::Correios::CEP( { ... } );"
Create an instance of WWW::Correios::CEP and configures it
.PP
Parameters:
	require_tests 
	with_tests
	user_agent
	post_url
	post_content
.PP
You can see details on \*(L"Full Sample\*(R" below
.ie n .SS "$cepper\->find( $cep )"
.el .SS "\f(CW$cepper\fP\->find( \f(CW$cep\fP )"
.IX Subsection "$cepper->find( $cep )"
Recive and \s-1CEP\s0 and try to get it address returning an hash ref with street, neighborhood, location, uf, cep and status.
.PP
If you call this method on an array scope, it returns an array with each address, if not, address_count key is added to the hash.
.ie n .SS "$cepper\->tests( )"
.el .SS "\f(CW$cepper\fP\->tests( )"
.IX Subsection "$cepper->tests( )"
This method make tests on some address for test if WWW::Correios::CEP still ok,
you may want keep this, these tests use some time, but it depends on your connection speed/correios site speed.
.PP
Retuns 1 if all tests are ok, if false, you may want to call dump_tests to see the changes
.ie n .SS "$cepper\->dump_tests( )"
.el .SS "\f(CW$cepper\fP\->dump_tests( )"
.IX Subsection "$cepper->dump_tests( )"
prints on \s-1STDOUT\s0 results of each test
.ie n .SS "$cepper\->setTests( $array_ref_of_hash )"
.el .SS "\f(CW$cepper\fP\->setTests( \f(CW$array_ref_of_hash\fP )"
.IX Subsection "$cepper->setTests( $array_ref_of_hash )"
You can change tests after new too, but you need to call \f(CW$cepper\fR\->\fItests()\fR if it already called.
.PP
\&\f(CW$array_ref_of_hash\fR should be an array ref with hashs like \*(L"with_tests\*(R" bellow
.ie n .SS "$cepper\->getTests( )"
.el .SS "\f(CW$cepper\fP\->getTests( )"
.IX Subsection "$cepper->getTests( )"
return current tests array
.SH "INTERNALS"
.IX Header "INTERNALS"
.SS "_parseHTML"
.IX Subsection "_parseHTML"
parse \*(L"html\*(R" of correios sites
.SS "_extractAddress"
.IX Subsection "_extractAddress"
internal function called on \*(L"tests\*(R" and \*(L"find\*(R" methods
.SH "Full Sample"
.IX Header "Full Sample"
.Vb 10
\&        my $cepper = new WWW::Correios::CEP(
\&                # this is default, you can disable it with a explicit false value,
\&                require_tests => 1,
\&                # theses tests may fail if the Correios page have changed.
\&                # Nevertheless, to not break this class when address/cep changes, you can set a your tests here
\&                with_tests => [
\&                        { street => \*(AqRua Realidade dos Nordestinos\*(Aq, neighborhood => \*(AqCidade Nova Helio\*'polis\*(Aq,
\&                                location => \*(AqSa\*~o Paulo\*(Aq     , uf => \*(AqSP\*(Aq, cep => \*(Aq04236000\*(Aq },
\&                        { street => \*(AqRua Rio Piracicaba\*(Aq           , neighborhood => \*(AqI.A.P.I.\*(Aq              ,
\&                                location => \*(AqOsasco\*(Aq        , uf => \*(AqSP\*(Aq, cep => \*(Aq06236040\*(Aq },
\&                        { street => \*(AqRua Hugo Baldessarini\*(Aq        , neighborhood => \*(AqVista Alegre\*(Aq          ,
\&                                location => \*(AqRio de Janeiro\*(Aq, uf => \*(AqRJ\*(Aq, cep => \*(Aq21236040\*(Aq },
\&                        { street => \*(AqAvenida Urucara\*'\*(Aq              , neighborhood => \*(AqCachoeirinha\*(Aq          ,
\&                                location => \*(AqManaus\*(Aq        , uf => \*(AqAM\*(Aq, cep => \*(Aq69065180\*(Aq }
\&                ],
\&                # if you want to change user agent, that defaults to Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)
\&                user_agent => \*(AqIECA\*(Aq,
\&
\&                # if you want to change POST url
\&                post_url => \*(Aqhttp://www.buscacep.correios.com.br/servicos/dnec/consultaLogradouroAction.do\*(Aq,
\&                
\&                # if you want to change post content, remenber that "cep number" will be concat on end of this string
\&                post_content => \*(AqStartRow=1&EndRow=10&TipoConsulta=relaxation&Metodo=listaLogradouro&relaxation=\*(Aq
\&        );
\&
\&        eval{$cepper\->tests()};
\&        if($@){
\&                # you can use $@ if you want just error message
\&                $cepper\->dump_tests;
\&        }else{
\&                my $address = $cepper\->find( $cep );
\&
\&                # returns hashref like { street => \*(Aq\*(Aq, neighborhood => \*(Aq\*(Aq, location => \*(Aq\*(Aq, uf => \*(AqSP\*(Aq, cep => \*(Aq\*(Aq, status => \*(Aq\*(Aq, address_count => 0 }
\&
\&                # you can also call find like it:
\&                my @address = $cepper\->find( $cep );
\&
\&        }
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
WWW::Correios::SRO
.SH "AUTHOR"
.IX Header "AUTHOR"
Renato \s-1CRON\s0, <rentocron@cpan.org>
Special thanks to Gabriel Andrade, <gabiru</lt> http://search.cpan.org/~gabiru/
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2011 by Renato
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.10.1 or,
at your option, any later version of Perl 5 you may have available.
.PP
See http://dev.perl.org/licenses/ for more information.
